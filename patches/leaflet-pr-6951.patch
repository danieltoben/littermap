From c74544e01817591571c9f6028ae512b9d6a26b11 Mon Sep 17 00:00:00 2001
From: Simon Legner <Simon.Legner@gmail.com>
Date: Wed, 25 Dec 2019 23:50:00 +0100
Subject: [PATCH 1/2] CSS: ref marker-icon-2x.png and marker-shadow.png

This enables automatic asset handling using webpack and its css-loader.
---
 dist/leaflet.css | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/dist/leaflet.css b/dist/leaflet.css
index 601476fe6dc..2ada0d5cf04 100644
--- a/dist/leaflet.css
+++ b/dist/leaflet.css
@@ -396,6 +396,12 @@ svg.leaflet-image-layer.leaflet-interactive path {
 .leaflet-default-icon-path {
 	background-image: url(images/marker-icon.png);
 	}
+.leaflet-default-icon-path-2x {
+	background-image: url(images/marker-icon-2x.png);
+	}
+.leaflet-default-icon-path-shadow {
+	background-image: url(images/marker-shadow.png);
+	}
 
 
 /* attribution and scale controls */

From 0cc7aa82334b79610f769754e92eea7ae2ab556d Mon Sep 17 00:00:00 2001
From: Simon Legner <Simon.Legner@gmail.com>
Date: Mon, 7 Dec 2020 18:02:56 +0100
Subject: [PATCH 2/2] Use leaflet-default-icon-path-{2x,shadow} in
 _detectIconPath

---
 src/layer/marker/Icon.Default.js | 22 ++++++++++++----------
 1 file changed, 12 insertions(+), 10 deletions(-)

diff --git a/src/layer/marker/Icon.Default.js b/src/layer/marker/Icon.Default.js
index fc6996c51c7..b01b415aff9 100644
--- a/src/layer/marker/Icon.Default.js
+++ b/src/layer/marker/Icon.Default.js
@@ -31,30 +31,32 @@ export var IconDefault = Icon.extend({
 	},
 
 	_getIconUrl: function (name) {
-		if (!IconDefault.imagePath) {	// Deprecated, backwards-compatibility only
-			IconDefault.imagePath = this._detectIconPath();
+		 // IconDefault.imagePath is deprecated, backwards-compatibility only
+		if (!IconDefault.imagePath && !IconDefault._imagePathDetected) {
+			this._detectIconPath('iconUrl', 'leaflet-default-icon-path');
+			this._detectIconPath('iconRetinaUrl', 'leaflet-default-icon-path-2x');
+			this._detectIconPath('shadowUrl', 'leaflet-default-icon-path-shadow');
 		}
 
 		// @option imagePath: String
 		// `Icon.Default` will try to auto-detect the location of the
 		// blue icon images. If you are placing these images in a non-standard
 		// way, set this option to point to the right path.
-		return (this.options.imagePath || IconDefault.imagePath) + Icon.prototype._getIconUrl.call(this, name);
+		return (this.options.imagePath || IconDefault.imagePath || '') + Icon.prototype._getIconUrl.call(this, name);
 	},
 
-	_detectIconPath: function () {
-		var el = DomUtil.create('div',  'leaflet-default-icon-path', document.body);
+	_detectIconPath: function (property, className) {
+		var el = DomUtil.create('div',  className, document.body);
 		var path = DomUtil.getStyle(el, 'background-image') ||
 		           DomUtil.getStyle(el, 'backgroundImage');	// IE8
 
 		document.body.removeChild(el);
 
 		if (path === null || path.indexOf('url') !== 0) {
-			path = '';
-		} else {
-			path = path.replace(/^url\(["']?/, '').replace(/marker-icon\.png["']?\)$/, '');
+			return;
 		}
-
-		return path;
+		path = path.replace(/^url\(["']?/, '').replace(/["']?\)$/, '');
+		IconDefault.prototype.options[property] = path;
+		IconDefault._imagePathDetected = true;
 	}
 });
